Index: rtpplay.c
===================================================================
RCS file: /tilde/fenner/cvs/rtptools/rtpplay.c,v
retrieving revision 1.1.1.2
retrieving revision 1.2
diff -u -r1.1.1.2 -r1.2
--- 1.1.1.2	1997/12/17 03:37:09
+++ 1.2	1998/01/09 22:55:18
@@ -161,7 +161,27 @@
   }
 
   /* get next packet */
-  RD_read(in, &buffer[rp]);
+  if (RD_read(in, &buffer[rp]) == 0) {
+	/*
+	 * No more packets from the file.  If there are no packets queued
+	 * to be played out, tell notify to stop.
+	 */
+	int gotone = 0;
+	for (rp = 0; rp < READAHEAD; rp++)
+	    if (buffer[rp].p.hdr.length)
+		gotone = 1;
+
+	if (gotone == 0) {
+		/* Due to the strange architecture of the notify stuff,
+		 * there has to be a timeout pending for it to notice
+		 * the request to stop.
+		 */
+		now.tv_usec += 100;
+		timer_set(&now, play_handler, (Notify_client)-1, 0);
+		notify_stop();
+	}
+	return NOTIFY_DONE;
+  }
 
   r = (rtp_hdr_t *)buffer[rp].p.data;
 
Index: rtpdump.c
===================================================================
RCS file: /tilde/fenner/cvs/rtptools/rtpdump.c,v
retrieving revision 1.3
retrieving revision 1.4
diff -u -r1.3 -r1.4
--- 1.3	1998/01/09 22:54:08
+++ 1.4	1998/01/09 22:54:41
@@ -752,6 +752,8 @@
     }
     else {
       len = RD_read(in, &packet);
+      if (len == 0)
+	exit(0);
       now.tv_sec = packet.p.hdr.offset / 1000.;
       now.tv_usec = (packet.p.hdr.offset % 1000) * 1000;
       dnow = tdbl(&now);
